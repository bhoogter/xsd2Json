buildscript {
    ext {
        kotlinVersion = "1.6.10"
        junitJupiterVersion = "5.1.0"
        kotlinTestVersion = "3.1.10"
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.2.0"
    }
}

plugins {
    id "java-library"
    id "org.jetbrains.kotlin.jvm" version "1.6.10" apply true
    id "maven-publish"
    id "org.jlleitschuh.gradle.ktlint-idea" version "10.2.1"
    id "org.jlleitschuh.gradle.ktlint" version "10.2.1"
}

ktlint {
    version.set("0.44.0")
}

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    google(); mavenCentral()
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    //Validator
    api "com.github.java-json-tools:json-schema-validator:2.2.10"

    //Schema Generation
    api "ch.qos.logback:logback-classic:1.2.3"
    api "ch.qos.logback:logback-core:1.2.3"
    api "org.slf4j:slf4j-api:1.7.25"
    api "org.json:json:20180813"

    api "org.apache.commons:commons-lang3:3.8.1"
    api "io.github.microutils:kotlin-logging:1.6.24"

    testImplementation group: "com.fasterxml.jackson.core", name: "jackson-databind", version: "2.12.1"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlinTestVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
}

tasks.withType(Test) {
    useJUnitPlatform()

    maxParallelForks = Runtime.runtime.availableProcessors()

    reports {
        junitXml.enabled = false
        html.enabled = true
    }

    testLogging {
        showStandardStreams = project.hasProperty("show-logs")
        events "PASSED", "FAILED", "SKIPPED"
    }

    afterSuite {
        desc, result ->
            if (!desc.parent) {
                println "\nTest result: ${result.resultType}"
                println "Test summary: ${result.testCount} tests, " +
                        "${result.successfulTestCount} succeeded, " +
                        "${result.failedTestCount} failed, " +
                        "${result.skippedTestCount} skipped"
            }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier "sources"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId "com.suchak"
            artifactId "xsd2jsonschema"
            from components.java
            artifact sourcesJar
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}